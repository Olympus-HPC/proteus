name: cpp-linter

on:
  pull_request:

jobs:
  cpp-linter:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v4
      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          conda-remove-defaults: true
      # Install Clang/LLVM using conda
      - name: Create environment
        run: |
          conda install -y -q -c conda-forge \
            clang=18.1.3 \
            clangxx=18.1.3 \
            llvmdev=18.1.3 \
            lit=18.1.3 \
            zlib zstd
      - name: Run cmake to export compilation database
        run: |
          mkdir -p build
          pushd build
          cmake .. \
            -DCMAKE_PREFIX_PATH="$CONDA_PREFIX;$CONDA_PREFIX/lib/cmake" \
            -DLLVM_INSTALL_DIR=$(llvm-config --prefix) \
            -DCMAKE_C_COMPILER=clang \
            -DCMAKE_CXX_COMPILER=clang++ \
            -DPROTEUS_LINK_SHARED_LLVM=on \
            -DCMAKE_EXPORT_COMPILE_COMMANDS=on
      - uses: cpp-linter/cpp-linter-action@v2
        id: linter
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: 19
          ignore: .github | scripts
          database: build
          extra-args: '-DPROTEUS_ENABLE_HIP'
          style: file
          tidy-checks: ''
          lines-changed-only: true
          format-review: true
          tidy-review: false
          passive-reviews: true
          thread-comments: true
      - name: Check clang-format linter status
        if: steps.linter.outputs.clang-format-checks-failed != 0
        run: exit 1
